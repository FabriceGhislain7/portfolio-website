{
  "projects": [
    {
      "_comment": "PRIMO PROGETTO: PIZZAMAMA DJANGO",
      "id": "pizzamama-django",
      "title": "PizzaMama Django",
      "description": "Applicazione web full-stack per la gestione di un ristorante pizzeria, sviluppata con Django framework. Include sistema di autenticazione utenti, gestione ordini, interfaccia admin e design responsive.",
      "image": "assets/images/projects/pizzamama-icone.jpg",
      "category": "web",
      "status": "in_progress",
      "featured": true,
      "technologies": [
        "Django",
        "Python",
        "HTML5",
        "CSS3",
        "SQLite",
        "JavaScript"
      ],
      "features": [
        "Sistema di autenticazione completo",
        "Gestione ordini e menu",
        "Interfaccia admin per gestione contenuti",
        "Design responsive e mobile-friendly",
        "Integrazione database SQLite",
        "Sistema di validazione form"
      ],
      "links": {
        "github": "https://github.com/FabriceGhislain7/python-dev-portfolio/tree/main/pizzamama",
        "live": "coming-soon.html",
        "demo": "coming-soon.html"
      },
      "date_created": "2024-07-01",
      "date_updated": "2024-07-23",
      "duration": "3 settimane",
      "team_size": 1,
      "role": "Full Stack Developer",
      "challenges": [
        "Implementazione sistema autenticazione Django",
        "Design responsive per tutti i dispositivi",
        "Ottimizzazione performance database"
      ],
      "learnings": [
        "Approfondimento framework Django",
        "Best practices per web development",
        "Gestione stato applicazioni web"
      ],
      "tags": ["Web Development", "Full Stack", "Django", "Python", "Responsive Design"],
      "priority": 1
    },

    {
      "_comment":"SECONDO PROGETTO: WEBSITE-PORTFOLIO",
      "id": "portfolio-website",
      "title": "Portfolio Website",
      "description": "Portfolio personale moderno e responsive sviluppato con HTML, CSS e JavaScript vanilla. Include sezioni dinamiche, tema scuro/chiaro, animazioni smooth e caricamento dati da JSON.",
      "image": "assets/images/projects/website_portfolio.jpg",
      "category": "web",
      "status": "completed",
      "featured": true,
      "technologies": [
        "HTML5",
        "CSS3",
        "JavaScript",
        "JSON",
        "Git"
      ],
      "features": [
        "Design moderno e responsive",
        "Switch tema scuro/chiaro",
        "Animazioni CSS e JavaScript",
        "Caricamento dinamico contenuti",
        "Navigazione smooth scroll",
        "Ottimizzato per SEO"
      ],
      "links": {
        "github": "https://github.com/FabriceGhislain7/portfolio-website",
        "live": "https://fabriceghislain7.github.io/portfolio-website/",
        "demo": "#"
      },
      "date_created": "2025-01-15",
      "date_updated": "2025-01-24",
      "duration": "2 settimane",
      "team_size": 1,
      "role": "Frontend Developer",
      "challenges": [
        "Architettura CSS modulare",
        "JavaScript vanilla senza framework",
        "Ottimizzazione performance"
      ],
      "learnings": [
        "CSS Grid e Flexbox avanzato",
        "JavaScript ES6+ moderno",
        "Web performance optimization"
      ],
      "tags": ["Frontend", "Portfolio", "Responsive", "JavaScript", "CSS"],
      "priority": 2
    },

    {
      "_comment":"TERZO PROGETTO TESI: MACHINE LEARNING & DATA ANALYSIS ON HETEROGENEOUS COVID'S DATASET",
      "id": "thesis-ml-project",
      "title": "Relationship and Dimensionality Reduction in Heterogeneous Datasets",
      "description": "Progetto di tesi magistrale focalizzato sull'applicazione di tecniche di machine learning per l'analisi delle relazioni e riduzione dimensionalità in dataset complessi ed eterogenei.",
      "image": "assets/images/projects/DA_ML_covid.jpg",
      "category": "data",
      "status": "in_progress",
      "featured": true,
      "technologies": [
        "MATLAB",
        "Machine Learning",
        "Random Forest",
        "Bootstrap",
        "Statistical Analysis",
        "Data Visualization"
      ],
      "features": [
        "Algoritmi Random Forest personalizzati",
        "Metodi Bootstrap per validazione",
        "Analisi statistica avanzata (P-value, test ipotesi)",
        "Visualizzazioni dati interattive",
        "Riduzione dimensionalità PCA",
        "Documentazione scientifica completa"
      ],
      "links": {
        "github": "coming-soon.html",
        "paper": "coming-soon.html",
        "presentation": "coming-soon.html"
      },
      "date_created": "2023-09-01",
      "date_updated": "2024-03-15",
      "duration": "6 mesi",
      "team_size": 1,
      "role": "Researcher & Data Scientist",
      "challenges": [
        "Gestione dataset complessi e eterogenei",
        "Implementazione algoritmi ML da zero",
        "Validazione statistica rigorosa"
      ],
      "learnings": [
        "Machine Learning teorico e pratico",
        "Metodologie di ricerca scientifica",
        "Analisi statistica avanzata"
      ],
      "tags": ["Machine Learning", "Research", "MATLAB", "Statistics", "Data Science"],
      "priority": 3
    },

    {
      "_comment":"QUARTO PROGETTO: MACHINE LEARNING & DATA ANALYSIS OF TITANIC",
      "id": "titanic-ml-analysis",
      "title": "Titanic Survival Prediction - Machine Learning Analysis",
      "description": "Analisi completa di Machine Learning per predire la sopravvivenza dei passeggeri del Titanic. Include data analysis esplorativa, feature engineering avanzato, multiple algoritmi ML, ensemble methods e dashboard interattiva con Streamlit.",
      "image": "assets/images/projects/Titanic_DA_ML3.jpg",
      "category": "data",
      "status": "ongoing",
      "featured": true,
      "technologies": [
        "Python",
        "Pandas",
        "Scikit-learn",
        "Streamlit",
        "Matplotlib",
        "Seaborn",
        "Jupyter Notebook",
        "NumPy"
      ],
      "features": [
        "Exploratory Data Analysis completa",
        "Feature Engineering avanzato con title extraction",
        "Multiple ML algorithms (Random Forest, SVM, Logistic Regression)",
        "Hyperparameter tuning con GridSearchCV",
        "Ensemble methods e Voting Classifier",
        "Dashboard interattiva Streamlit multi-page",
        "Cross-validation stratificata 10-fold",
        "Model interpretation e feature importance analysis",
        "Learning curves e bias-variance analysis",
        "Automated EDA con Sweetviz e Pandas Profiling",
        "Link diretti a Google Colab notebooks",
        "Performance metrics: 83.79% accuracy, 0.8567 ROC-AUC"
      ],
      "links": {
        "github": "https://github.com/FabriceGhislain7/titanic-streamlit-dashboard",
        "documentation": "#",
        "live":"https://titanic-app-dashboard-ogxxezhe82g8tggobo5l2n.streamlit.app/"
      },
      "date_created": "2025-07-15",
      "date_updated": "2025-07-30",
      "duration": "2 settimane",
      "team_size": 1,
      "role": "Data Scientist / ML Engineer",
      "challenges": [
        "Gestione missing values strategica per evitare data leakage",
        "Feature engineering creativo basato su domain knowledge storico",
        "Bilanciamento bias-variance per generalizzazione ottimale",
        "Integrazione seamless tra analisi esplorativa e predittiva",
        "Ottimizzazione ensemble methods per performance superiori"
      ],
      "learnings": [
        "Advanced feature engineering techniques",
        "Ensemble methods e model stacking",
        "Cross-validation strategies per small datasets",
        "Model interpretation e explainable AI",
        "End-to-end ML pipeline development",
        "Professional data science workflow",
        "Streamlit multi-page applications"
      ],
      "tags": [
        "Machine Learning",
        "Data Science", 
        "Feature Engineering",
        "Ensemble Methods",
        "Streamlit",
        "Classification",
        "Python",
        "Scikit-learn"
      ],
      "priority": 5
    },

    {
      "_comment": "PROGETTO GDR WEB APP - GIOCO DI RUOLO FANTASY MULTIPLAYER",
      "id": "gdr-web-app",
      "title": "GDR Web App - Fantasy Role Playing Game",
      "description": "Gioco di ruolo fantasy multiplayer sviluppato durante il corso 'Programmatore e Sviluppatore Python'. Un'applicazione web completa che permette ai giocatori di creare personaggi, esplorare ambienti, combattere nemici e gestire inventari in un mondo fantasy immersivo.",
      "image": "assets/images/projects/gdr_flask.jpg",
      "category": "web",
      "status": "ongoing",
      "featured": true,
      "technologies": [
        "Python 3",
        "Flask",
        "SQLAlchemy",
        "Marshmallow",
        "HTML5",
        "Bootstrap 5", 
        "JavaScript",
        "SQLite",
        "Git",
        "GitHub"
      ],
      "features": [
        "Sistema di autenticazione utenti completo",
        "Creazione personaggi con 3 classi uniche (Guerriero, Mago, Ladro)",
        "Sistema inventario dinamico con oggetti specializzati",
        "3 ambienti di gioco con modificatori specifici (Foresta, Vulcano, Palude)",
        "Sistema di combattimento strategico turn-based",
        "Missioni procedurali con nemici e ricompense",
        "Sistema di progressione personaggi con level-up",
        "Dashboard statistiche avanzate per personaggi e inventari",
        "Interfaccia responsive Bootstrap 5",
        "Architettura modulare con Blueprint Flask",
        "Validazione dati con Marshmallow schemas",
        "Sistema logging completo per debug e monitoring",
        "Gestione crediti virtuali per economia di gioco",
        "API REST per statistiche e dashboard dinamiche"
      ],
      "links": {
        "github": "https://github.com/FabriceGhislain7/gdr-web-app",
        "live": "https://gdr-web-app.onrender.com",
        "documentation": "#"
      },
      "date_created": "2025-05-01",
      "date_updated": "2025-08-08",
      "duration": "3 mesi",
      "team_size": "8 collaboratori",
      "role": "Full-Stack Developer in Trainig",
      "challenges": [
        "Implementazione sistema di combattimento bilanciato con modificatori ambientali",
        "Gestione sessioni multiplayer e stato di gioco persistente",
        "Architettura modulare scalabile con separazione logica business/presentazione",
        "Bilanciamento gameplay tra le diverse classi di personaggi",
        "Ottimizzazione performance per gestione simultanea di più giocatori",
        "Refactoring da funzioni individuali a classi organizzate per maintainability"
      ],
      "learnings": [
        "Sviluppo web full-stack con Flask e architettura MVC",
        "Game design e bilanciamento meccaniche di gioco",
        "Collaborative development con Git workflow e code review",
        "Database modeling per applicazioni gaming complesse",
        "UI/UX design per applicazioni web interattive",
        "Clean code principles e design patterns",
        "Testing e debugging di applicazioni web multi-utente",
        "Code refactoring e organizational patterns"
      ],
      "game_mechanics": {
        "classes": [
          {
            "name": "Guerriero",
            "hp": 130,
            "attack": "20-100",
            "recovery": "30 HP fissi",
            "bonus_environment": "Foresta (+5 attacco)"
          },
          {
            "name": "Mago", 
            "hp": 80,
            "attack": "0-90",
            "recovery": "20% HP",
            "bonus_environment": "Vulcano (+10 attacco)"
          },
          {
            "name": "Ladro",
            "hp": 120,
            "attack": "10-85", 
            "recovery": "10-40 HP",
            "bonus_environment": "Foresta (+5 cura/turno)"
          }
        ],
        "environments": [
          "Foresta (Ambiente Equilibrato)",
          "Vulcano (Ambiente Estremo)", 
          "Palude (Ambiente Ostile)"
        ],
        "objects": [
          "Pozione Rossa (Recupera +30 HP)",
          "Bomba Acida (30 danni + bonus Vulcano)",
          "Medaglione (Buff permanente +10 attacco)"
        ]
      },
      "technical_highlights": [
        "~3000+ linee di codice Python/HTML/JS",
        "100+ commit Git con collaborative workflow",
        "Architettura modulare con 5+ Blueprint Flask",
        "Sistema validazione dati robusto con Marshmallow",
        "Dashboard real-time con API REST e AJAX",
        "Responsive design mobile-first con Bootstrap 5"
      ],
      "course_context": {
        "program": "Programmatore e Sviluppatore Python",
        "organization": "Ente F.IRE",
        "funding": "FSE+ Regione Liguria",
        "type": "Corso formativo in presenza",
        "focus_areas": ["Python Programming", "Web Development", "IoT Systems", "AI Applications"]
      },
      "tags": [
        "Python",
        "Flask", 
        "Game Development",
        "Full-Stack",
        "Multiplayer",
        "Role Playing Game",
        "Web Application",
        "Bootstrap",
        "SQLAlchemy",
        "Collaborative Project"
      ],
      "priority": 4
    },

    {
      "_comment": "GALAXY RUNNER - GIOCO SPAZIALE 3D CON KIVY",
      "id": "galaxy-runner-kivy",
      "title": "Galaxy Runner - Gioco Tunnel Spaziale 3D",
      "description": "Gioco runner spaziale 3D ad alta velocità costruito con Kivy. Caratteristiche: generazione procedurale dinamica del percorso, trasformazioni prospettiche realistiche matematiche personalizzate, e supporto input multipiattaforma per dispositivi desktop e mobile con effetto tunnel immersivo.",
      "image": "assets/images/projects/galaxy_runner.png",
      "category": "gaming",
      "status": "completed",
      "featured": true,
      "technologies": [
        "Python 3.10",
        "Kivy 2.3.1",
        "Matematica NumPy",
        "Motore 3D Personalizzato",
        "Multipiattaforma",
        "OpenGL",
        "Sistema Audio",
        "Git",
        "GitHub",
        "VS Code",
        "Buildozer"
      ],
      "features": [
        "Motore prospettiva 3D personalizzato con matematica punto di fuga",
        "Controlli multipiattaforma fluidi (tastiera desktop + touch mobile)",
        "Generazione procedurale dinamica percorso con posizionamento ostacoli intelligente",
        "Sistema audio completo con musica di sottofondo ed effetti sonori",
        "Stati gioco integrati con schermata iniziale e funzionalità game over",
        "Rilevamento collisioni preciso tra nave giocatore e ostacoli procedurali",
        "Interfaccia utente responsiva con layout adattivo per diverse risoluzioni",
        "Architettura modulare con separazione chiara delle responsabilità",
        "Sistema punteggio basato su distanza con aggiornamenti tempo reale",
        "Performance ottimizzate a 60 FPS con rendering efficiente",
        "Documentazione completa con best practices e riferimento API",
        "Versione localizzata italiana per scopi educativi",
        "Tipografia personalizzata con font a tema spaziale",
        "Sistema trasformazioni matematiche avanzate per effetto tunnel 3D"
      ],
      "links": {
        "github": "https://github.com/FabriceGhislain7/kivy-game-galaxy",
        "live": "coming-soon.html",
        "documentation": "https://github.com/FabriceGhislain7/kivy-game-galaxy/blob/main/API_REFERENCE.md#core-architecture"
      },
      "date_created": "2025-02-03",
      "date_updated": "2025-08-10",
      "duration": "2 settimane",
      "team_size": "1 sviluppatore",
      "role": "Sviluppatore Giochi e Ingegnere Matematica 3D",
      "challenges": [
        "Implementazione algoritmi trasformazione prospettica 3D da zero con matematica personalizzata",
        "Ottimizzazione performance per rendering 60 FPS con oggetti multipli simultanei",
        "Creazione sistema input multipiattaforma unificato per desktop e mobile",
        "Bilanciamento meccaniche gioco per difficoltà progressiva e coinvolgimento giocatore",
        "Architettura modulare scalabile con separazione pulita delle responsabilità",
        "Gestione sistemi coordinate multipli (mondo, schermo, prospettiva)",
        "Implementazione rilevamento collisioni preciso con algoritmi basati su vertici",
        "Documentazione tecnica completa per trasformazioni matematiche"
      ],
      "learnings": [
        "Matematica 3D avanzata e algoritmi trasformazione prospettica",
        "Padronanza framework Kivy per sviluppo giochi multipiattaforma", 
        "Progettazione architettura motore gioco con componenti modulari",
        "Tecniche ottimizzazione performance per rendering tempo reale",
        "Gestione input multipiattaforma e pattern design responsivo",
        "Scrittura documentazione professionale e progettazione API",
        "Gestione workflow Git con branch funzionalità",
        "Strategie localizzazione codice per scopi educativi",
        "Integrazione sistema audio e gestione suoni basata su stati",
        "Modellazione matematica per effetti prospettiva 3D realistici"
      ],
      "game_mechanics": {
        "classes": [
          {
            "name": "Sistema Prospettiva 3D",
            "hp": "Punto di fuga dinamico",
            "attack": "Trasformazione matematica personalizzata",
            "recovery": "Curva pow(fattore_y, 4)",
            "bonus_environment": "Ottimizzazione uscita anticipata"
          },
          {
            "name": "Controlli Giocatore", 
            "hp": "Input multipiattaforma",
            "attack": "Tastiera + Touch responsivo",
            "recovery": "Controllo velocità continua",
            "bonus_environment": "Stop immediato al rilascio"
          },
          {
            "name": "Generazione Procedurale",
            "hp": "Algoritmo percorso intelligente",
            "attack": "Direzioni casuali bilanciate", 
            "recovery": "Eliminazione tessere ottimizzata",
            "bonus_environment": "Prevenzione confini automatica"
          }
        ],
        "environments": [
          "Tunnel Spaziale 3D (Prospettiva Realistica)",
          "Sistema Coordinate Mondo (Spazio Logico)", 
          "Schermo Rendering (Spazio Visivo)"
        ],
        "objects": [
          "Nave Giocatore (Triangolo controllo preciso)",
          "Tessere Ostacoli (Quad procedurali)",
          "Griglia Tunnel (Linee prospettiche dinamiche)"
        ]
      },
      "technical_highlights": [
        "~2000+ righe di codice Python con documentazione completa",
        "Algoritmi matematici 3D personalizzati per prospettiva realistica",
        "Architettura modulare con 6 file specializzati",
        "Performance 60 FPS costanti con rendering efficiente",
        "Compatibilità multipiattaforma (Windows, macOS, Linux, Android, iOS)",
        "Documentazione professionale con riferimento API completo"
      ],
      "course_context": {
        "program": "Apprendimento Autonomo Kivy",
        "organization": "Progetto Personale",
        "funding": "Autofinanziato",
        "type": "Sviluppo giochi Python",
        "focus_areas": ["Programmazione Python", "Sviluppo Giochi", "Matematica 3D", "Architettura Software"]
      },
      "tags": [
        "Python",
        "Kivy",
        "Sviluppo Giochi", 
        "Matematica 3D",
        "Multipiattaforma",
        "Gioco Spaziale",
        "Generazione Procedurale",
        "Ottimizzazione Performance",
        "Progetto Educativo",
        "Documentazione Tecnica"
      ],
      "priority": 5
    },

    {
      "_comment": "MRBEAT - DRUM MACHINE PROFESSIONALE CON KIVY",
      "id": "mrbeat-drum-machine",
      "title": "MrBeat - Drum Machine e Beat Sequencer Professionale",
      "description": "Drum machine professionale per produzione musicale costruita con Kivy e pygame. Caratteristiche: sequencing multi-traccia a 16 step, audio engine real-time con threading sicuro, interfaccia professionale drum machine, e supporto sound kit estensibili con elaborazione audio 16-bit ad alta qualità.",
      "image": "assets/images/projects/mrbeat.png",
      "category": "music-production",
      "status": "completed",
      "featured": true,
      "technologies": [
        "Python 3.10",
        "Kivy 2.3.1",
        "Pygame Audio Engine",
        "NumPy Audio Processing",
        "Threading Sicuro",
        "Audio WAV 16-bit",
        "Real-time Processing",
        "Git",
        "GitHub",
        "VS Code",
        "Professional Documentation"
      ],
      "features": [
        "Audio engine professionale pygame con processing 44.1kHz 16-bit",
        "Sequencing multi-traccia sincronizzato con timing sample-accurate",
        "Controllo BPM real-time (80-160) con aggiornamenti seamless durante playback",
        "Sistema sound kit estensibile con 8 tracce drum professionali",
        "Threading sicuro per audio processing senza glitch o interruzioni",
        "Interfaccia drum machine professionale con visual feedback sincronizzato",
        "Pattern programming 16-step con modifiche real-time durante playback",
        "Sistema audio one-shot per triggering immediato e performance live",
        "Architettura modulare con separazione chiara audio engine e UI",
        "Documentazione tecnica completa con API reference professionale",
        "Cross-platform compatibility (Windows, macOS, Linux)",
        "Professional code quality con type hints e error handling robusto",
        "Visual step indicator sincronizzato con audio sequencer",
        "Sistema mixing multi-traccia con overflow protection"
      ],
      "links": {
        "github": "https://github.com/yourusername/mrbeat-drum-machine",
        "live": "coming-soon.html",
        "documentation": "https://github.com/yourusername/mrbeat-drum-machine/blob/main/README.md"
      },
      "date_created": "2025-08-13",
      "date_updated": "2025-08-13",
      "duration": "1 settimana intensiva",
      "team_size": "1 sviluppatore",
      "role": "Audio Software Engineer e Music Technology Developer",
      "challenges": [
        "Conversione completa da audiostream deprecato a pygame moderno mantenendo compatibilità",
        "Implementazione threading sicuro per audio real-time senza race conditions",
        "Ottimizzazione latenza audio sotto 10ms per performance musicale professionale",
        "Creazione architettura modulare scalabile per sound kit personalizzati",
        "Sincronizzazione sample-accurate tra UI visual feedback e audio sequencer",
        "Gestione memory management efficiente per campioni audio multipli",
        "Implementazione pattern programming real-time senza interruzioni audio",
        "Documentazione professionale completa con flowchart dettagliati"
      ],
      "learnings": [
        "Audio programming avanzato con pygame mixer e processing real-time",
        "Threading sicuro e concurrency patterns per applicazioni audio critiche",
        "Architettura software modulare per audio engines scalabili",
        "Ottimizzazione performance per audio processing a bassa latenza",
        "Kivy framework mastery per interfacce musicali professionali",
        "Gestione format audio WAV e conversione sample rate automatica",
        "Documentazione tecnica professionale e API design best practices",
        "Music technology development e understanding drum machine workflows",
        "Cross-platform audio development challenges e soluzioni",
        "Professional code organization e separation of concerns patterns"
      ],
      "audio_architecture": {
        "components": [
          {
            "name": "AudioEngine Core",
            "capability": "Coordinazione sistema audio completo",
            "technology": "Pygame mixer con configurazione professionale",
            "performance": "44.1kHz, 16-bit, latenza <10ms",
            "scalability": "Supporto sound kit illimitati"
          },
          {
            "name": "Multi-Track Sequencer",
            "capability": "Sequencing sincronizzato 8 tracce",
            "technology": "Threading sicuro con sample-accurate timing",
            "performance": "Real-time pattern updates",
            "scalability": "Estensibile fino 32 tracce"
          },
          {
            "name": "Professional UI System",
            "capability": "Interfaccia drum machine completa",
            "technology": "Kivy responsive design con feedback visivo",
            "performance": "60 FPS rendering smooth",
            "scalability": "Layout adattivo per screen multiple"
          }
        ],
        "sound_formats": [
          "WAV PCM 16-bit (formato principale)",
          "Sample rate automatico (conversione trasparente)",
          "Mono/Stereo support con processing ottimizzato"
        ],
        "performance_specs": [
          "Latenza audio: <10ms su hardware moderno",
          "CPU usage: <5% durante operation normale",
          "Memory: ~50MB base + 10MB per sound kit",
          "Timing accuracy: sample-perfect sequencing"
        ]
      },
      "technical_highlights": [
        "~1500+ righe di codice Python con documentazione professionale completa",
        "Threading sicuro implementato per audio real-time senza glitch",
        "Architettura modulare con 10+ file specializzati per separation of concerns",
        "Performance audio ottimizzate per production musicale professionale",
        "Cross-platform compatibility testata su Windows, macOS, Linux",
        "Professional documentation con flowchart dettagliati e API reference"
      ],
      "course_context": {
        "program": "Audio Software Development",
        "organization": "Progetto Personale Professionale",
        "funding": "Autofinanziato",
        "type": "Music Technology Development",
        "focus_areas": ["Audio Programming", "Music Production Tools", "Real-time Systems", "Professional Software Architecture"]
      },
      "tags": [
        "Python",
        "Kivy",
        "Audio Programming",
        "Music Production",
        "Drum Machine",
        "Real-time Audio",
        "Threading",
        "Professional Software",
        "Music Technology",
        "Cross-platform"
      ],
      "priority": 4
    },

    {
      "id": "python-learning-journey",
      "title": "Python Learning Journey",
      "description": "Raccolta completa di progetti e esercizi Python dal corso Udemy, evoluzione da v1.0 a v12.0. Include automazione, web scraping, GUI applications e API integration.",
      "image": "assets/images/projects/python_scripts.jpg",
      "category": "python",
      "status": "ongoing",
      "featured": false,
      "technologies": [
        "Python",
        "Tkinter",
        "Kivy",
        "Requests",
        "BeautifulSoup",
        "Pandas"
      ],
      "features": [
        "12+ versioni progressive di progetti",
        "Automazione task ripetitivi",
        "Web scraping applicazioni",
        "GUI desktop con Tkinter/Kivy",
        "Integrazione API esterne",
        "Documentazione dettagliata evoluzione"
      ],
      "links": {
        "github": "https://github.com/FabriceGhislain7/python-dev-portfolio",
        "course": "#"
      },
      "date_created": "2024-08-01",
      "date_updated": "2025-01-24",
      "duration": "6+ mesi",
      "team_size": 1,
      "role": "Python Developer",
      "challenges": [
        "Mantenere coerenza tra versioni",
        "Documentare processo di apprendimento",
        "Implementare best practices progressive"
      ],
      "learnings": [
        "Python da principiante a intermedio",
        "Version control con Git",
        "Clean code principles"
      ],
      "tags": ["Python", "Learning", "Portfolio", "Automation", "GUI"],
      "priority": 5
    }
  ],

  "categories": [
    {
      "id": "all",
      "name": "Tutti i Progetti",
      "count": 5,
      "color": "#6b7280"
    },

    {
      "id": "web",
      "name": "Web Development",
      "count": 2,
      "color": "#3b82f6"
    },

    {
      "id": "data",
      "name": "Data & AI",
      "count": 2,
      "color": "#f59e0b"
    },

    {
      "id": "python",
      "name": "Python Projects",
      "count": 1,
      "color": "#10b981"
    },

    {
      "id": "iot",
      "name": "IoT Systems",
      "count": 1,
      "color": "#8b5cf6"
    }
  ],

  "project_status": {
    "completed": {
      "label": "Completato",
      "color": "#10b981",
      "icon": "fas fa-check-circle"
    },
    "in_progress": {
      "label": "In Corso",
      "color": "#f59e0b",
      "icon": "fas fa-clock"
    },
    "ongoing": {
      "label": "Continuo",
      "color": "#3b82f6",
      "icon": "fas fa-sync"
    },
    "planned": {
      "label": "Pianificato",
      "color": "#6b7280",
      "icon": "fas fa-calendar"
    }
  },

  "featured_projects": [
    "pizzamama-django",
    "portfolio-website",
    "thesis-ml-project"
  ],

  "technologies": [
    "Python",
    "Django",
    "HTML5",
    "CSS3",
    "JavaScript",
    "SQLite",
    "MATLAB",
    "Machine Learning",
    "Raspberry Pi",
    "IoT",
    "Streamlit",
    "Plotly",
    "Git"
  ],

  "meta": {
    "last_updated": "2025-01-24",
    "total_projects": 6,
    "completed_projects": 3,
    "in_progress_projects": 2,
    "ongoing_projects": 1,
    "total_technologies": 13,
    "version": "1.0"
  }
}